version: 2
# These environment variables must be set in CircleCI UI
#
# DOCKER_EMAIL   - login info for docker hub
# DOCKER_USER
# DOCKER_PASS
# AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
# Read the README for more information. Migrating to Circle2.0
jobs:
 build:
  #working_directory: /go/src/github.com/saumc/deployer
  #- run: export GOPATH_HEAD="$(echo ${GOPATH}|cut -d ':' -f 1)"    
  working_directory: /home/circleci/.go_workspace/src/github.com/saumc/deployer
  
  machine:
    image: ubuntu-2004:202010-01 

  steps:
   #- run: sudo chown -R ${CIRCLE_PROJECT_USERNAME}:${CIRCLE_PROJECT_USERNAME} /go/src/github.com/saumc/deployer
   - run: echo ~
   - run: echo ${GOPATH}
   - checkout
   - run: 
      name: Setup environment
      command: |       
       gb="/src/github.com/${CIRCLE_PROJECT_USERNAME}";
       if [ ${CIRCLE_PROJECT_USERNAME} == 'Securing-DevOps' ]; then
         dr="securingdevops"
       else
         dr=${DOCKER_USER}
       fi
       cat >> $BASH_ENV << EOF
       export GOPATH_HEAD="$(echo ${GOPATH}|cut -d ':' -f 1)"
       #export GOPATH_HEAD="~/go"
       export GOPATH_BASE="$(echo ${GOPATH}|cut -d ':' -f 1)${gb}"
       #export GOPATH_BASE="${GOPATH_HEAD}${gb}"
       export DOCKER_REPO="${dr}"
       EOF
   - run: echo ${GOPATH_HEAD}
   - run: echo ${GOPATH_BASE}
   - run: echo ${DOCKER_REPO}
   - run: mkdir -p "${GOPATH_BASE}"
   - run: mkdir -p "${GOPATH_HEAD}/bin" 
   - run:
      name: Install pip
      command: |
        sudo apt update
        sudo apt install -y python3-pip python-dev
   - run:
      name: Install AWS dependencies
      command: |
        sudo pip3 install awscli
   #- run: sudo pip install awscli

   - run:
      name: Build application container 
      command: | 
        go install --ldflags '-extldflags "-static"' github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME};
        go get -u github.com/jvehent/pineapple
        #go install --ldflags '-extldflags "-static"' ${GOPATH_BASE}/${CIRCLE_PROJECT_REPONAME};
        [ ! -e bin ] && mkdir bin;
        cp "$GOPATH_HEAD/bin/${CIRCLE_PROJECT_REPONAME}" bin/deployer
        chmod +x deploymentTests/*
        docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .

      # # Run GOVEND to check if outdated dependencies are present
       #- 'GOPATH="$GOPATH_HEAD"; ( cd ${GOPATH_BASE}/${CIRCLE_PROJECT_REPONAME} && govend -u && git diff --quiet )' #FIXME - removed dependency testing
   - run:
      name: aws credentials
      command: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
        echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials

        echo "[default]" > ~/.aws/config
        echo "region = ap-south-1"  >> ~/.aws/config
        echo "output = json" >> ~/.aws/config
   
   - deploy:
      command: | 
       # appropriately tag and push the container to dockerhub
       # only when on the master branch


        if [ "${CIRCLE_BRANCH}" == "master" ]; then
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS};
            echo ${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG};
            #FIXME - not rebuilding
            docker images --no-trunc | awk '/^app/ {print $3}' | sudo tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt;
            docker push ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME};
        fi          

      # trigger ebs redeploy
 
   - run:
      name: deploy to aws
      command: |
        aws elasticbeanstalk update-environment --region ap-south-1 --application-name deployer --environment-id e-zher6vasyw --version-label deployer-api
 
